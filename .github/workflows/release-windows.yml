name: Build and Release Windows Installer

on:
  push:
    tags:
      - "v*-win"  # Trigger the workflow on tags that match the pattern

permissions:
  contents: write  # Required for creating releases and uploading artifacts

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.23.1'

      # Step 3: Install Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 4: Install frontend dependencies
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./frontend

      # Step 5: Build frontend
      - name: Build frontend
        run: npm run build
        working-directory: ./frontend

      # Step 6: Install Wails CLI
      - name: Install Wails CLI
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      # Step 7: Install NSIS (for creating Windows installer)
      - name: Install NSIS
        run: choco install nsis

      # Step 8: Build Wails project for Windows (with NSIS)
      - name: Build Wails project
        run: wails build --nsis

      # Step 9: Verify if the installer was created
      - name: Verify Installer
        run: |
          if (Test-Path "./build/bin/Numbers.exe") {
            Write-Host "Installer found!"
          } else {
            Write-Error "Installer not found!"
          }

      # Step 10: Upload Windows installer as an artifact
      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: ./build/bin/Numbers.exe  # Path to the Windows installer

  release:
    needs: build-windows
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Download Windows installer artifact
      - name: Download Windows installer
        uses: actions/download-artifact@v4
        with:
          name: windows-installer

      # Step 3: Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # Corrected to use only the tag name
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      # Step 4: Upload Windows Installer to Release
      - name: Upload Windows Installer to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows-installer/windows-installer.zip  # Adjust path if necessary
          asset_name: Numbers-Windows-Installer.exe
          asset_content_type: application/x-msdownload
